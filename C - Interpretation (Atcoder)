#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
void __print(int x) { cerr << x; }
void __print(long x) { cerr << x; }
void __print(long long x) { cerr << x; }
void __print(unsigned x) { cerr << x; }
void __print(unsigned long x) { cerr << x; }
void __print(unsigned long long x) { cerr << x; }
void __print(float x) { cerr << x; }
void __print(double x) { cerr << x; }
void __print(long double x) { cerr << x; }
void __print(char x) { cerr << '\'' << x << '\''; }
void __print(const char *x) { cerr << '\"' << x << '\"'; }
void __print(const string &x) { cerr << '\"' << x << '\"'; }
void __print(bool x) { cerr << (x ? "true" : "false"); }

template <typename T, typename V>
void __print(const pair<T, V> &x)
{
  cerr << '{';
  __print(x.first);
  cerr << ',';
  __print(x.second);
  cerr << '}';
}
template <typename T>
void __print(const T &x)
{
  int f = 0;
  cerr << '{';
  for (auto &i : x)
    cerr << (f++ ? "," : ""), __print(i);
  cerr << "}";
}
void _print() { cerr << "]\n"; }
template <typename T, typename... V>
void _print(T t, V... v)
{
  __print(t);
  if (sizeof...(v))
    cerr << ", ";
  _print(v...);
}
#ifndef ONLINE_JUDGE
#define debug(x...)             \
  cerr << "[" << #x << "] = ["; \
  _print(x)
#else
#define debug(x...)
#endif
#define IOS                \
  ios::sync_with_stdio(0); \
  cin.tie(0);              \
  cout.tie(0);
#define endl "\n"
#define YES printf("YES\n")
#define NO printf("NO\n")
#define YES printf("YES\n")
#define NO printf("NO\n")
#define NOo printf("-1\n")
#define srt(x) sort(x.begin(), x.end())
#define rsrt(x) sort(x.rbegin(), x.rend())
#define ull unsigned long long
#define ll long long
#define pb push_back
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define piii pair<int, pii>
#define min_heap priority_queue<int, vector<int>, greater<int>>
const ll mod = 1000000007;
const ll inf = 1e9;
const ll N = 10000007;
#define vll vector<long long>
#define mll map<long long, long long>
ll parent[100009];
ll sz[100009];
void make()
{
  for (ll i = 0; i <= 100007; i++)
    parent[i] = i, sz[i] = 1;
}
ll find(ll v)
{
  if (parent[v] == v)
    return v;
  return parent[v] = find(parent[v]);
}
void Union(ll u, ll v)
{
  ll a = find(u);
  ll b = find(v);
  if (a != b)
  {
    if (sz[a] < sz[b]) // don't change the depth
      swap(a, b);
    parent[b] = a; // choto tar parent boro ta
    sz[a] += sz[b];
  }
}
void solve()
{
  ll i,  ans = 0, b, n, m, q, f, aa;
  cin >> n >> m;
  set<ll>st;
  make();
  ll a[n + 1];
  for (i = 0; i < n; i++)
  {
    cin >> q;
    f = 0;
    while (q--)
    {
      cin >> aa;
      st.insert(aa);
      if (!f)
        ans = aa,f=1;
      else
      {
        Union(ans, aa);
      }
    }
  }
  ans = 0;
  for(auto it : st)
  {
    if (parent[it] == it)
      ans++;
  }
  if (ans > 1)
    NO;
  else
    YES;
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ll t = 1;
  // cin >> t;
  while (t--)
  {
    solve();
  }
}
